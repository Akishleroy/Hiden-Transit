// –°—Ç—Ä–∞–Ω–∏—Ü–∞ AI —á–∞—Ç-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞

import { useState, useEffect, useRef } from 'react';
import { motion, AnimatePresence } from 'motion/react';
import { Card, CardHeader, CardTitle, CardContent } from '../components/ui/card';
import { Button } from '../components/ui/button';
import { Input } from '../components/ui/input';
import { Badge } from '../components/ui/badge';
import { 
  MessageSquare, 
  Send, 
  Bot, 
  User, 
  Trash2,
  Sparkles,
  BarChart3,
  Activity,
  Loader2,
  TrendingUp,
  AlertTriangle,
  Clock,
  Target,
  CheckCircle,
  InfoIcon,
  PanelLeftClose,
  PanelLeftOpen,
  Zap,
  History
} from 'lucide-react';
import { cn } from '../components/ui/utils';

// –°—Ç–∞—Ç–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤ AI
function generateAIResponse(message: string): string {
  const lowerMessage = message.toLowerCase();
  
  if (lowerMessage.includes('—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞') || lowerMessage.includes('—Å–µ–≥–æ–¥–Ω—è')) {
    return `üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:**

‚Ä¢ –í—Å–µ–≥–æ –æ–ø–µ—Ä–∞—Ü–∏–π: 2,847
‚Ä¢ –í—ã—è–≤–ª–µ–Ω–Ω—ã—Ö –∞–Ω–æ–º–∞–ª–∏–π: 127 (4.5%)
‚Ä¢ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ: 23 –æ–ø–µ—Ä–∞—Ü–∏–∏
‚Ä¢ –í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫: 45 –æ–ø–µ—Ä–∞—Ü–∏–π
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫: 59 –æ–ø–µ—Ä–∞—Ü–∏–π

**–¢–æ–ø –∞–Ω–æ–º–∞–ª–∏–π:**
1. –í–µ—Å–æ–≤—ã–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è: 67 —Å–ª—É—á–∞–µ–≤
2. –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏: 34 —Å–ª—É—á–∞—è  
3. –ú–∞—Ä—à—Ä—É—Ç–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è: 26 —Å–ª—É—á–∞–µ–≤

–†–µ–∫–æ–º–µ–Ω–¥—É—é –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å—Ç–∞–Ω—Ü–∏—é "–ë—Ä–µ—Å—Ç-–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π" - 18 –∞–Ω–æ–º–∞–ª–∏–π –∑–∞ –¥–µ–Ω—å.`;
  }
  
  if (lowerMessage.includes('–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ') || lowerMessage.includes('–∫—Ä–∏—Ç–∏—á')) {
    return `üö® **–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∞–Ω–æ–º–∞–ª–∏–∏:**

**–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ 23 –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∞–Ω–æ–º–∞–ª–∏–∏:**

1. **–í–∞–≥–æ–Ω ‚Ññ8734291** - –í–µ—Å–æ–≤–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ +127% (–ü–æ–¥–æ–∑—Ä–µ–Ω–∏–µ –Ω–∞ –ø–µ—Ä–µ–≥—Ä—É–∑)
2. **–í–∞–≥–æ–Ω ‚Ññ5629834** - –ú–∞—Ä—à—Ä—É—Ç–Ω–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ (–ù–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞)
3. **–í–∞–≥–æ–Ω ‚Ññ7423851** - –í—Ä–µ–º–µ–Ω–Ω–∞—è –∞–Ω–æ–º–∞–ª–∏—è (–ó–∞–¥–µ—Ä–∂–∫–∞ 72 —á–∞—Å–∞)

**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –≤–∞–≥–æ–Ω—ã
‚Ä¢ –°–≤—è–∑–∞—Ç—å—Å—è —Å –¥–∏—Å–ø–µ—Ç—á–µ—Ä—Å–∫–æ–π —Å–ª—É–∂–±–æ–π –ø–æ –º–∞—Ä—à—Ä—É—Ç–Ω—ã–º –Ω–∞—Ä—É—à–µ–Ω–∏—è–º
‚Ä¢ –£–≤–µ–¥–æ–º–∏—Ç—å —Å–ª—É–∂–±—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–¥–µ—Ä–∂–∫–∞—Ö`;
  }
  
  if (lowerMessage.includes('–∞–Ω–∞–ª–∏–∑') && lowerMessage.includes('–≤–µ—Å')) {
    return `‚öñÔ∏è **–ê–Ω–∞–ª–∏–∑ –≤–µ—Å–æ–≤—ã—Ö –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π:**

**–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π:**
‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ: ¬±12.3%
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ: +184% (–≤–∞–≥–æ–Ω ‚Ññ9234567)
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–π: 156 —Å–ª—É—á–∞–µ–≤

**–ü–∞—Ç—Ç–µ—Ä–Ω—ã:**
‚Ä¢ 67% –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π –Ω–∞ –º–∞—Ä—à—Ä—É—Ç–µ –†–æ—Å—Å–∏—è ‚Üí –ë–µ–ª–∞—Ä—É—Å—å
‚Ä¢ –ü–∏–∫ –∞–Ω–æ–º–∞–ª–∏–π: —á–µ—Ç–≤–µ—Ä–≥ 14:00-16:00
‚Ä¢ –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –≥—Ä—É–∑—ã: –º–µ—Ç–∞–ª–ª–æ–ª–æ–º, —É–≥–æ–ª—å

**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
‚Ä¢ –£—Å–∏–ª–∏—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—å –≤–∑–≤–µ—à–∏–≤–∞–Ω–∏—è –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–ª–∏–±—Ä–æ–≤–∫—É –≤–µ—Å–æ–≤ –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏ "–ö—Ä–∞—Å–Ω–æ–µ"`;
  }
  
  if (lowerMessage.includes('–º–∞—Ä—à—Ä—É—Ç') || lowerMessage.includes('–ø—Ä–æ–±–ª–µ–º')) {
    return `üõ£Ô∏è **–ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã:**

**–¢–æ–ø-5 –º–∞—Ä—à—Ä—É—Ç–æ–≤ —Å –∞–Ω–æ–º–∞–ª–∏—è–º–∏:**

1. **–†–æ—Å—Å–∏—è ‚Üí –ë–µ–ª–∞—Ä—É—Å—å** (67 –∞–Ω–æ–º–∞–ª–∏–π)
   - –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞: –≤–µ—Å–æ–≤—ã–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
   - –°—Ç–∞–Ω—Ü–∏—è: –ö—Ä–∞—Å–Ω–æ–µ-–ü–∞—Å—Å

2. **–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω ‚Üí –ë–µ–ª–∞—Ä—É—Å—å** (34 –∞–Ω–æ–º–∞–ª–∏–∏)
   - –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞: –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏
   - –°—Ç–∞–Ω—Ü–∏—è: –°–æ—Å–Ω–æ–≤–∫–∞

3. **–ë–µ–ª–∞—Ä—É—Å—å ‚Üí –ü–æ–ª—å—à–∞** (23 –∞–Ω–æ–º–∞–ª–∏–∏)
   - –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞: –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç
   - –°—Ç–∞–Ω—Ü–∏—è: –ë—Ä–µ—Å—Ç-–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π

**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏ –ö—Ä–∞—Å–Ω–æ–µ-–ü–∞—Å—Å
‚Ä¢ –£–ª—É—á—à–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é —Å –∫–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω–æ–π`;
  }
  
  if (lowerMessage.includes('—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏') || lowerMessage.includes('—Ä–µ–∫–æ–º–µ–Ω–¥')) {
    return `üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:**

**–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–µ (1-2 –Ω–µ–¥–µ–ª–∏):**
‚Ä¢ –£–≤–µ–ª–∏—á–∏—Ç—å —á–∞—Å—Ç–æ—Ç—É –ø—Ä–æ–≤–µ—Ä–æ–∫ –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏ "–ö—Ä–∞—Å–Ω–æ–µ"
‚Ä¢ –í–Ω–µ–¥—Ä–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –¥–ª—è –≥—Ä—É–∑–æ–≤ >50 —Ç–æ–Ω–Ω
‚Ä¢ –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤

**–°—Ä–µ–¥–Ω–µ—Å—Ä–æ—á–Ω—ã–µ (1-3 –º–µ—Å—è—Ü–∞):**
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–≤–µ—Ä–∫—É –≤–µ—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—ã —Å —Ä–æ—Å—Å–∏–π—Å–∫–∏–º–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏
‚Ä¢ –û–±—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª –Ω–æ–≤—ã–º –ø—Ä–æ—Ü–µ–¥—É—Ä–∞–º

**–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ (3-12 –º–µ—Å—è—Ü–µ–≤):**
‚Ä¢ –í–Ω–µ–¥—Ä–∏—Ç—å –ø—Ä–µ–¥–∏–∫—Ç–∏–≤–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É
‚Ä¢ –°–æ–∑–¥–∞—Ç—å –µ–¥–∏–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ª–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ü–µ–ø–æ—á–∫–∏

**–û–∂–∏–¥–∞–µ–º—ã–π —ç—Ñ—Ñ–µ–∫—Ç:** —Å–Ω–∏–∂–µ–Ω–∏–µ –∞–Ω–æ–º–∞–ª–∏–π –Ω–∞ 35-40%`;
  }
  
  if (lowerMessage.includes('–ø—Ä–æ–≥–Ω–æ–∑') || lowerMessage.includes('–∑–∞–≤—Ç—Ä–∞')) {
    return `üîÆ **–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞:**

**–û–∂–∏–¥–∞–µ–º—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:**
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π: 2,650-2,800
‚Ä¢ –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã–µ –∞–Ω–æ–º–∞–ª–∏–∏: 98-115 (3.7-4.1%)
‚Ä¢ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∏—Å–∫–∏: 15-20 —Å–ª—É—á–∞–µ–≤

**–§–∞–∫—Ç–æ—Ä—ã —Ä–∏—Å–∫–∞:**
‚Ä¢ –ù–µ–±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–µ –ø–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è (–¥–æ–∂–¥—å)
‚Ä¢ –ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ —Ä–∞–±–æ—Ç—ã –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏ "–°–æ—Å–Ω–æ–≤–∫–∞"
‚Ä¢ –ü–æ–≤—ã—à–µ–Ω–Ω—ã–π –≥—Ä—É–∑–æ–ø–æ—Ç–æ–∫ –∏–∑ –†–æ—Å—Å–∏–∏

**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞:**
‚Ä¢ –£—Å–∏–ª–∏—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—å —Å 10:00 –¥–æ 14:00
‚Ä¢ –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Ä–µ–∑–µ—Ä–≤ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –¥–ª—è —Å—Ç–∞–Ω—Ü–∏–∏ "–°–æ—Å–Ω–æ–≤–∫–∞"
‚Ä¢ –£–≤–µ–¥–æ–º–∏—Ç—å —Å–ª—É–∂–±—ã –æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∑–∞–¥–µ—Ä–∂–∫–∞—Ö

**–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ø–æ—Ä–æ–≥–∞ –∞–Ω–æ–º–∞–ª–∏–π:** 23%`;
  }
  
  // –û–±—â–∏–π –æ—Ç–≤–µ—Ç
  return `ü§ñ **AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç Hide Tranzit**

–Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å: "${message}"

**–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
‚Ä¢ "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ–≥–æ–¥–Ω—è" - —Ç–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
‚Ä¢ "–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∞–Ω–æ–º–∞–ª–∏–∏" - —Å—Ä–æ—á–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã  
‚Ä¢ "–∞–Ω–∞–ª–∏–∑ –≤–µ—Å–∞" - –≤–µ—Å–æ–≤—ã–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
‚Ä¢ "–ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã" - –º–∞—Ä—à—Ä—É—Ç–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
‚Ä¢ "—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏" - —Å–æ–≤–µ—Ç—ã –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
‚Ä¢ "–ø—Ä–æ–≥–Ω–æ–∑ –∑–∞–≤—Ç—Ä–∞" - –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è

**–°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞:** 728,904+ –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º
**–¢–æ—á–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞:** 97.2%
**–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞:** <150–º—Å

–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? üöÄ`;
}

interface ChatMessage {
  id: string;
  content: string;
  isUser: boolean;
  timestamp: string;
}

interface ChatSession {
  id: string;
  name: string;
  lastMessage: string;
  timestamp: string;
  messageCount: number;
  messages: ChatMessage[];
}

const quickCommands = [
  {
    label: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–Ω–æ–º–∞–ª–∏–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è',
    command: '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ–≥–æ–¥–Ω—è',
    icon: BarChart3,
    color: 'text-blue-600'
  },
  {
    label: '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∞–Ω–æ–º–∞–ª–∏–∏',
    command: '–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∞–Ω–æ–º–∞–ª–∏–∏',
    icon: AlertTriangle,
    color: 'text-red-600'
  },
  {
    label: '–ê–Ω–∞–ª–∏–∑ –≤–µ—Å–æ–≤—ã—Ö –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π',
    command: '–∞–Ω–∞–ª–∏–∑ –≤–µ—Å–∞',
    icon: Activity,
    color: 'text-purple-600'
  },
  {
    label: '–ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã',
    command: '–ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã',
    icon: Target,
    color: 'text-orange-600'
  },
  {
    label: '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏',
    command: '—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
    icon: Sparkles,
    color: 'text-green-600'
  },
  {
    label: '–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞',
    command: '–ø—Ä–æ–≥–Ω–æ–∑ –∑–∞–≤—Ç—Ä–∞',
    icon: TrendingUp,
    color: 'text-indigo-600'
  }
];

// –ú–æ–∫ –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–π
const mockSessions: ChatSession[] = [
  {
    id: '1',
    name: '–ê–Ω–∞–ª–∏–∑ –∞–Ω–æ–º–∞–ª–∏–π - 12 –°–µ–Ω',
    lastMessage: '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∞–Ω–æ–º–∞–ª–∏–∏',
    timestamp: '2024-09-12T10:30:00',
    messageCount: 8,
    messages: [
      { id: '1', content: '–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∞–Ω–æ–º–∞–ª–∏–∏', isUser: true, timestamp: '2024-09-12T10:30:00' },
      { id: '2', content: 'üö® **–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∞–Ω–æ–º–∞–ª–∏–∏:**\n\n**–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ 23 –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∞–Ω–æ–º–∞–ª–∏–∏:**\n\n1. **–í–∞–≥–æ–Ω ‚Ññ8734291** - –í–µ—Å–æ–≤–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ +127%', isUser: false, timestamp: '2024-09-12T10:30:05' }
    ]
  },
  {
    id: '2',
    name: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - 11 –°–µ–Ω',
    lastMessage: '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ–≥–æ–¥–Ω—è',
    timestamp: '2024-09-11T14:15:00',
    messageCount: 5,
    messages: [
      { id: '3', content: '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ–≥–æ–¥–Ω—è', isUser: true, timestamp: '2024-09-11T14:15:00' },
      { id: '4', content: 'üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:**\n\n‚Ä¢ –í—Å–µ–≥–æ –æ–ø–µ—Ä–∞—Ü–∏–π: 2,847\n‚Ä¢ –í—ã—è–≤–ª–µ–Ω–Ω—ã—Ö –∞–Ω–æ–º–∞–ª–∏–π: 127 (4.5%)', isUser: false, timestamp: '2024-09-11T14:15:03' }
    ]
  },
  {
    id: '3',
    name: '–ü—Ä–æ–≥–Ω–æ–∑—ã - 10 –°–µ–Ω',
    lastMessage: '–ø—Ä–æ–≥–Ω–æ–∑ –∑–∞–≤—Ç—Ä–∞',
    timestamp: '2024-09-10T16:45:00',
    messageCount: 3,
    messages: [
      { id: '5', content: '–ø—Ä–æ–≥–Ω–æ–∑ –∑–∞–≤—Ç—Ä–∞', isUser: true, timestamp: '2024-09-10T16:45:00' },
      { id: '6', content: 'üîÆ **–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞:**\n\n**–û–∂–∏–¥–∞–µ–º—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:**\n‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π: 2,650-2,800', isUser: false, timestamp: '2024-09-10T16:45:02' }
    ]
  },
  {
    id: '4',
    name: '–ú–∞—Ä—à—Ä—É—Ç–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ - 9 –°–µ–Ω',
    lastMessage: '–ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã',
    timestamp: '2024-09-09T11:20:00',
    messageCount: 6,
    messages: []
  },
  {
    id: '5',
    name: '–í–µ—Å–æ–≤–æ–π –∞–Ω–∞–ª–∏–∑ - 8 –°–µ–Ω',
    lastMessage: '–∞–Ω–∞–ª–∏–∑ –≤–µ—Å–∞',
    timestamp: '2024-09-08T15:45:00',
    messageCount: 4,
    messages: []
  },
  {
    id: '6',
    name: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è - 7 –°–µ–Ω',
    lastMessage: '—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
    timestamp: '2024-09-07T09:15:00',
    messageCount: 12,
    messages: []
  },
  {
    id: '7',
    name: '–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - 6 –°–µ–Ω',
    lastMessage: '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ–≥–æ–¥–Ω—è',
    timestamp: '2024-09-06T16:30:00',
    messageCount: 7,
    messages: []
  },
  {
    id: '8',
    name: '–°–∏—Å—Ç–µ–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ - 5 –°–µ–Ω',
    lastMessage: '–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∞–Ω–æ–º–∞–ª–∏–∏',
    timestamp: '2024-09-05T13:10:00',
    messageCount: 9,
    messages: []
  }
];

export function ChatPage() {
  const [currentSession, setCurrentSession] = useState<ChatSession | null>(null);
  const [message, setMessage] = useState('');
  const [loading, setLoading] = useState(false);
  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);
  const [sessions, setSessions] = useState<ChatSession[]>(mockSessions);
  const messagesEndRef = useRef<HTMLDivElement>(null);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  useEffect(() => {
    scrollToBottom();
  }, [currentSession?.messages]);

  const createNewSession = () => {
    const newSession: ChatSession = {
      id: Date.now().toString(),
      name: `–ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è - ${new Date().toLocaleDateString('ru-RU')}`,
      lastMessage: '',
      timestamp: new Date().toISOString(),
      messageCount: 0,
      messages: []
    };
    setSessions(prev => [newSession, ...prev]);
    setCurrentSession(newSession);
  };

  const selectSession = (session: ChatSession) => {
    setCurrentSession(session);
  };

  const handleSend = async () => {
    if (!message.trim()) return;
    
    let session = currentSession;
    if (!session) {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
      session = {
        id: Date.now().toString(),
        name: `–°–µ—Å—Å–∏—è - ${new Date().toLocaleDateString('ru-RU')}`,
        lastMessage: message,
        timestamp: new Date().toISOString(),
        messageCount: 1,
        messages: []
      };
      setSessions(prev => [session!, ...prev]);
      setCurrentSession(session);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const userMessage: ChatMessage = {
      id: Date.now().toString(),
      content: message,
      isUser: true,
      timestamp: new Date().toISOString()
    };
    
    const updatedSession = {
      ...session,
      messages: [...session.messages, userMessage],
      lastMessage: message,
      messageCount: session.messageCount + 1,
      timestamp: new Date().toISOString()
    };
    
    setCurrentSession(updatedSession);
    setSessions(prev => prev.map(s => s.id === session!.id ? updatedSession : s));
    setMessage('');
    setLoading(true);
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏ (100–º—Å)
    setTimeout(() => {
      const aiResponse = generateAIResponse(message);
      
      const aiMessage: ChatMessage = {
        id: (Date.now() + 1).toString(),
        content: aiResponse,
        isUser: false,
        timestamp: new Date().toISOString()
      };
      
      const finalSession = {
        ...updatedSession,
        messages: [...updatedSession.messages, aiMessage],
        messageCount: updatedSession.messageCount + 1
      };
      
      setCurrentSession(finalSession);
      setSessions(prev => prev.map(s => s.id === session!.id ? finalSession : s));
      setLoading(false);
    }, 100);
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      e.stopPropagation();
      handleSend();
    }
  };

  const handleQuickCommandClick = (e: React.MouseEvent, command: string) => {
    e.preventDefault();
    e.stopPropagation();
    setMessage(command);
  };

  const handleSendClick = (e: React.MouseEvent) => {
    e.preventDefault();
    e.stopPropagation();
    handleSend();
  };

  const formatTimestamp = (timestamp: string) => {
    return new Date(timestamp).toLocaleTimeString('ru-RU', {
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  const formatSessionTime = (timestamp: string) => {
    return new Date(timestamp).toLocaleDateString('ru-RU', {
      day: '2-digit',
      month: 'short',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  return (
    <div className="h-full flex flex-col">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex-shrink-0 p-4 sm:p-6 bg-background/95 backdrop-blur border-b">
        <div className="flex flex-col sm:flex-row sm:items-center justify-between gap-4">
          <div>
            <h1 className="text-2xl font-bold text-gray-900 dark:text-gray-100 flex items-center">
              <Bot className="h-8 w-8 mr-3 text-blue-600" />
              AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç
            </h1>
            <p className="text-gray-600 dark:text-gray-400 text-sm">–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω–∑–∏—Ç–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∏ –∞–Ω–æ–º–∞–ª–∏–π</p>
          </div>
          <div className="flex items-center gap-3">
            <Badge variant="outline" className="text-green-600 border-green-200">
              <CheckCircle className="w-3 h-3 mr-1" />
              –û–Ω–ª–∞–π–Ω
            </Badge>
            <Button
              variant="outline"
              size="sm"
              onClick={() => setIsPanelCollapsed(!isPanelCollapsed)}
              title={isPanelCollapsed ? "–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞–Ω–µ–ª—å" : "–°–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å"}
            >
              {isPanelCollapsed ? <PanelLeftOpen className="h-4 w-4" /> : <PanelLeftClose className="h-4 w-4" />}
            </Button>
            <Button
              variant="outline"
              size="sm"
              onClick={createNewSession}
            >
              <MessageSquare className="h-4 w-4 mr-2" />
              –ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è
            </Button>
          </div>
        </div>
      </div>

      <div className="flex-1 overflow-hidden flex">
        {/* –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–µ—Å—Å–∏–∏ */}
        <AnimatePresence>
          {!isPanelCollapsed && (
            <motion.div 
              className="border-r bg-gray-50/50 chat-left-panel"
              initial={{ width: 0, opacity: 0 }}
              animate={{ width: 384, opacity: 1 }}
              exit={{ width: 0, opacity: 0 }}
              transition={{ duration: 0.3, ease: "easeInOut" }}
            >
              <div className="w-full max-w-[384px] p-4 min-w-0 h-full flex flex-col">
                <div className="flex-1 flex flex-col space-y-4 min-h-0">
                  {/* –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã */}
                  <Card className="flex-shrink-0">
                    <CardHeader className="pb-3">
                      <CardTitle className="flex items-center space-x-2 text-sm">
                        <Zap className="h-4 w-4 text-yellow-600" />
                        <span>–ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã</span>
                      </CardTitle>
                    </CardHeader>
                    <CardContent className="space-y-2">
                      {quickCommands.map((cmd, index) => (
                        <Button
                          key={index}
                          variant="ghost"
                          size="sm"
                          className="w-full justify-start h-auto p-2 text-left overflow-hidden"
                          onClick={(e) => handleQuickCommandClick(e, cmd.command)}
                        >
                          <cmd.icon className={cn("h-3 w-3 mr-2 flex-shrink-0", cmd.color)} />
                          <span className="text-xs truncate">{cmd.label}</span>
                        </Button>
                      ))}
                    </CardContent>
                  </Card>

                  {/* –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–µ—Å—Å–∏–∏ */}
                  <Card className="flex-1 flex flex-col min-h-0">
                    <CardHeader className="pb-3 flex-shrink-0">
                      <CardTitle className="flex items-center space-x-2 text-sm">
                        <History className="h-4 w-4 text-gray-600" />
                        <span>–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–µ—Å—Å–∏–∏</span>
                      </CardTitle>
                    </CardHeader>
                    <CardContent className="space-y-2 flex-1 overflow-y-auto">
                      {sessions.map((session) => (
                        <div
                          key={session.id}
                          className={cn(
                            "p-3 rounded-lg cursor-pointer transition-colors border",
                            currentSession?.id === session.id
                              ? "bg-blue-50 dark:bg-emerald-900/30 border-blue-200 dark:border-emerald-700 text-blue-900 dark:text-emerald-300"
                              : "bg-white dark:bg-slate-800 border-gray-200 dark:border-slate-600 hover:bg-gray-50 dark:hover:bg-slate-700"
                          )}
                          onClick={() => selectSession(session)}
                        >
                          <div className="text-sm font-medium truncate max-w-full">{session.name}</div>
                          <div className="text-xs text-gray-500 dark:text-slate-400 truncate mt-1 max-w-full">{session.lastMessage}</div>
                          <div className="flex items-center justify-between mt-2">
                            <span className="text-xs text-gray-400 dark:text-slate-500">
                              {formatSessionTime(session.timestamp)}
                            </span>
                            <Badge variant="outline" className="text-xs">
                              {session.messageCount} —Å–æ–æ–±—â.
                            </Badge>
                          </div>
                        </div>
                      ))}
                    </CardContent>
                  </Card>
                </div>
              </div>
            </motion.div>
          )}
        </AnimatePresence>

        {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - –ß–∞—Ç */}
        <div className="flex-1 flex flex-col">
          {/* –û–±–ª–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–π */}
          <div className="flex-1 overflow-y-auto p-4 space-y-4">
            {!currentSession || currentSession.messages.length === 0 ? (
              <div className="flex flex-col items-center justify-center h-full text-center space-y-4">
                <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center">
                  <Bot className="h-8 w-8 text-blue-600" />
                </div>
                <div>
                  <h3 className="text-lg font-medium text-gray-900">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç!</h3>
                  <p className="text-gray-600 mt-1">–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Å—Å–∏—é —Å–ª–µ–≤–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ</p>
                </div>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-3 max-w-2xl w-full">
                  {quickCommands.slice(0, 4).map((cmd, index) => (
                    <Button
                      key={index}
                      variant="outline"
                      className="justify-start h-auto p-4"
                      onClick={(e) => handleQuickCommandClick(e, cmd.command)}
                    >
                      <cmd.icon className={cn("h-4 w-4 mr-3", cmd.color)} />
                      <div className="text-left">
                        <div className="font-medium">{cmd.label}</div>
                        <div className="text-xs text-gray-500">{cmd.command}</div>
                      </div>
                    </Button>
                  ))}
                </div>
              </div>
            ) : (
              <>
                {currentSession.messages.map((msg, index) => (
                  <div
                    key={index}
                    className={cn(
                      'flex gap-3 max-w-4xl',
                      msg.isUser ? 'justify-end ml-auto' : 'justify-start'
                    )}
                  >
                    {!msg.isUser && (
                      <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center flex-shrink-0">
                        <Bot className="h-4 w-4 text-blue-600" />
                      </div>
                    )}
                    
                    <div className={cn(
                      'rounded-lg px-4 py-3 max-w-2xl break-words',
                      msg.isUser 
                        ? 'bg-blue-600 text-white' 
                        : 'bg-gray-100 text-gray-900'
                    )}>
                      <div className="text-sm whitespace-pre-wrap break-words">{msg.content}</div>
                      <div className={cn(
                        'text-xs mt-2 opacity-70',
                        msg.isUser ? 'text-blue-100' : 'text-gray-500'
                      )}>
                        {formatTimestamp(msg.timestamp)}
                      </div>
                    </div>
                    
                    {msg.isUser && (
                      <div className="w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center flex-shrink-0">
                        <User className="h-4 w-4 text-gray-600" />
                      </div>
                    )}
                  </div>
                ))}
                
                {loading && (
                  <div className="flex gap-3">
                    <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                      <Bot className="h-4 w-4 text-blue-600" />
                    </div>
                    <div className="bg-gray-100 rounded-lg px-4 py-3">
                      <div className="flex items-center space-x-2">
                        <Loader2 className="h-4 w-4 animate-spin" />
                        <span className="text-sm text-gray-600">–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à –∑–∞–ø—Ä–æ—Å...</span>
                      </div>
                    </div>
                  </div>
                )}
                
                <div ref={messagesEndRef} />
              </>
            )}
          </div>

          {/* –û–±–ª–∞—Å—Ç—å –≤–≤–æ–¥–∞ */}
          <div className="flex-shrink-0 p-4 border-t bg-gray-50/50">
            <div className="flex gap-3">
              <Input
                value={message}
                onChange={(e) => setMessage(e.target.value)}
                onKeyPress={handleKeyPress}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å..."
                className="flex-1"
                disabled={loading}
                tabIndex={1}
                autoComplete="off"
              />
              <Button 
                onClick={handleSendClick} 
                disabled={!message.trim() || loading}
                className="px-6"
                tabIndex={2}
                type="button"
              >
                {loading ? (
                  <Loader2 className="h-4 w-4 animate-spin" />
                ) : (
                  <Send className="h-4 w-4" />
                )}
              </Button>
            </div>
            <div className="flex items-center justify-center mt-2">
              <p className="text-xs text-gray-500 flex items-center">
                <InfoIcon className="h-3 w-3 mr-1" />
                –ò–ò –º–æ–∂–µ—Ç –¥–µ–ª–∞—Ç—å –æ—à–∏–±–∫–∏. –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}